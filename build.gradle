apply plugin: 'java-library'
apply plugin: 'maven-publish'

group = 'li.earth.urchin.twic'
version = '1.0'
description = file('README.adoc').readLines()[0]
ext.vendor = 'Tom Anderson'
ext.url = 'https://github.com/tomwhoiscontrary/homme-pendu'
ext.license = 'BSD-2-Clause'

repositories {
    jcenter()
}

dependencies {
    api group: 'junit', name: 'junit', version: '4.12'
    api group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'

    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': project.vendor,
                'Implementation-Vendor-Id': project.group,
                'Implementation-URL': project.url
        )
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}
assemble.dependsOn sourceJar

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            pom.withXml {
                def pomProject = asNode()
                pomProject.appendNode('name', project.name)
                pomProject.appendNode('description', description)
                pomProject.appendNode('url', project.url)
                def license = pomProject.appendNode('licenses').appendNode('license')
                license.appendNode('name', project.license)
                license.appendNode('url', "${project.url}/blob/master/LICENSE.txt")
                license.appendNode('distribution', 'repo')
                pomProject.appendNode('developers').appendNode('developer').appendNode('name', project.vendor)
                def scm = pomProject.appendNode('scm')
                scm.appendNode('url', project.url)
                scm.appendNode('connection', "scm:git:${project.url}.git")
            }
        }
    }

    repositories {
        maven {
            url 'https://api.bintray.com/maven/tomwhoiscontrary/maven/homme-pendu/;publish=0'
            credentials {
                username 'tomwhoiscontrary'
                password findProperty('bintrayApiKey')
            }
        }
    }
}
